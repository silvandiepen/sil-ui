@use "sass:map";
@import "../icons";
@import "../style/function.scss";

$prefix: "input-field-" !default;

@mixin formStyle($name: "input-field", $elements: ()) {
  $block: getBlock($name);

  $prefix: "#{$block}-";

  .#{$block} {
    font-family: inherit;
    position: relative;
    display: flex;
    flex-direction: column-reverse;
    &,
    * {
      box-sizing: border-box;
    }

    @if contains($elements, "text-control") or
      contains($elements, "number-control") or
      contains($elements, "textarea-control") or
      contains($elements, "select-control")
    {
      &__input {
        background-color: v("background-color", var(--background, transparent));
        border-radius: var(
            --border-radius-top-left,
            v("border-radius", var(--border-radius, 0.25em))
          )
          var(
            --border-radius-top-right,
            v("border-radius", var(--border-radius, 0.25em))
          )
          var(
            --border-radius-bottom-left,
            v("border-radius", var(--border-radius, 0.25em))
          )
          var(
            --border-radius-bottom-right,
            v("border-radius", var(--border-radius, 0.25em))
          );
        position: relative;
        // border: 2px solid v("border-color", color(foreground, 0.25));
        border: v("border-width", 2px) solid v("border-color", var(--foreground, currentColor));
        
        &:has(:focus) {
          outline: none;
          border-color: var(--primary, lightblue);
        }
      }
      &__control {
        width: 100%;
        padding: v("padding", 1em);
        font-family: v("font-family", 0.75em 1em);
        font-size: 1em;
        border: none;
        color: v("text-color", var(--foreground, #fff));
        background-color: transparent;
        &:focus {
          outline: none;
          border-color: color(primary, 0.5);
        }
      }
    }
    @if contains($elements, "number-control") {
      &__controls {
        position: absolute;
        right: 0;
        top: 0;
        height: 100%;
        display: flex;
        flex-direction: column;
        -moz-appearance: textfield;
        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }
      }
      &__down,
      &__up {
        height: 100%;
        aspect-ratio: 0.5/1;
        padding: 0;
        margin: 0;
        border: none;
        background-color: transparent;
        background-size: 1em 1em;
        background-repeat: no-repeat;
        background-position: center center;
        fill: purple;

        transition: background-color 200ms;
        background-color: var(--foreground);
        color: blue;
        //  mask-size: auto 12px;
        mask-repeat: no-repeat;
        mask-size: 1em 1em;
        webkit-mask-position: center center;
        -webkit-mask-size: 1em 1em;
        -webkit-mask-repeat: no-repeat;
        -webkit-mask-position: center center;
      }
      &__up {
        // background-image: getIcon("chevron-up",'blue');
        mask-image: getIcon("chevron-up");
        -webkit-mask-image: getIcon("chevron-up");
      }
      &__down {
        mask-image: getIcon("chevron-down");
        -webkit-mask-image: getIcon("chevron-down");
      }
    }
    @if contains($elements, "textarea-control") {
      &__control {
        resize: none;
      }
    }
    @if contains($elements, "select-control") {
      &__input {
        &::before {
          content: "";
          aspect-ratio: 1/1;
          height: 100%;
          position: absolute;
          right: 0;
          top: 0;
          mask-image: getIcon("chevron-down");
          mask-position: center center;
          mask-size: 1em 1em;
          mask-repeat: no-repeat;
          -webkit-mask-image: getIcon("chevron-down");
          -webkit-mask-position: center center;
          -webkit-mask-size: 1em 1em;
          -webkit-mask-repeat: no-repeat;
          background-color: white;
        }
      }
      &__control {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
      }
    }
    @if contains($elements, "checkbox") {
      &__control {
        width: 0;
        height: 0;
        position: absolute;

        &:focus {
          & + #{$block}__label::before {
            box-shadow: v(
              "focus-shadow",
              0 0 0 3px v("focus-color", var(--primary))
            );
          }
        }
        &:checked + .#{$block}__label::before {
          content: "âœ“";
          font-weight: bold;
          color: v("checked-text-color", var(--background));
          border-color: v("checked-background-color", var(--foreground));
          background-color: v("checked-background-color", var(--foreground));
        }
      }
      &__label {
        &::before {
          text-align: center;
          line-height: 1.33;
          border-radius: v("border-radius", var(--border-radius, 0.25em));
          border: 2px solid v("border-color", color(foreground, 0.25));
          color: v("text-color", var(--foreground, #fff));
          content: "";
          width: 1.33em;
          height: 1.33em;
        }
        display: flex;
        gap: 1em;
        align-items: center;
        padding: v("label-padding", v("padding", 0.75em 0em));
      }
    }
    @if contains($elements, "switch") {
      &__control {
        width: 0;
        height: 0;
        position: absolute;

        &:focus {
          & + #{$block}__label::before {
            box-shadow: v(
              "focus-shadow",
              0 0 0 3px v("focus-color", var(--primary))
            );
          }
        }
        &:checked + .#{$block}__label .#{$block}__switch::after {
          transform: translate(
            calc(
              var(--switch-width) -
                var(--switch-bullet-width) -
                var(--switch-border-weight)
            ),
            -50%
          );
        }
      }
      &__switch {
        width: var(--switch-width);
        height: 1.33em;
        position: relative;
        --switch-border-weight: 2px;
        --switch-bullet-width: 1em;
        --switch-space: 2px;
        --switch-width: 2em;
        &::before {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          text-align: center;
          line-height: 1.33;
          border-radius: v("border-radius", 1em);
          border: var(--switch-border-weight)
            solid
            v("border-color", color(foreground, 0.25));
          color: v("text-color", var(--foreground, #fff));
          content: "";
          width: 100%;
          height: 100%;
          display: block;
        }
        &::after {
          content: "";
          width: var(--switch-bullet-width);
          height: calc(
            100% - (var(--switch-border-weight) + var(--switch-space))
          );
          background-color: var(--foreground);
          display: block;
          position: absolute;
          top: 50%;
          left: 0%;
          transform: translate(var(--switch-border-weight), -50%);
          border-radius: 50%;
        }
      }
      &__label {
        display: flex;
        gap: 1em;
        align-items: center;
        padding: v("label-padding", v("padding", 0.75em 0em));
      }
    }
    @if contains($elements, "switch-control") {
    }
    @if contains($elements, "radio-control") {
      &__control {
        width: 0;
        height: 0;
        position: absolute;

        &:focus {
          & + #{$block}__label::before {
            box-shadow: v(
              "focus-shadow",
              0 0 0 3px v("focus-color", var(--primary))
            );
          }
        }
        &:checked + .#{$block}__label::before {
          color: v("checked-text-color", var(--background));
          border-color: v("checked-background-color", var(--foreground));
          background: radial-gradient(
            ellipse at center,
            v("checked-text-color", var(--background)) 0%,
            v("checked-text-color", var(--background)) 75%,
            transparent 75%
          );
          background-size: 0.75em 0.75em;
          background-position: center center;
          background-repeat: no-repeat;
          background-color: v("checked-background-color", var(--foreground));
        }
      }
    }
    @if contains($elements, "radio-label") {
      &__label {
        &::before {
          border-radius: v("border-radius", 50%);
          border: 2px solid v("border-color", color(foreground, 0.25));
          color: v("text-color", var(--foreground, #fff));
          content: "";
          width: 1.33em;
          height: 1.33em;
        }
        display: flex;
        gap: 1em;
        align-items: center;
        padding: v("label-padding", v("padding", 0.75em 0em));
      }
    }

    @if contains($elements, "label") {
      &__label {
        padding: v("label-padding", v("padding", 0.75em 0em));
      }
    }
    @if contains($elements, "preview") {
      &__preview {
        padding: v("preview-opacity", 0.5);
      }
    }

    @if contains($elements, "error") {
      &--has-error .#{$block}__input {
        border-color: var(--error, red);
        --border-radius-bottom-right: 0em;
        --border-radius-bottom-left: 0em;
      }
      &__error {
        // margin-top: .5em;
        background-color: var(--error);
        border-radius: 0 0 var(--border-radius, 0.5em) var(--border-radius, 0.5em);
        color: var(--error-text);
        padding: 0.5em 1em;
        font-size: .85em;
        display: block;
      }
    }
  }
}
